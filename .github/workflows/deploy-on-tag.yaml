name: Deploy release
on:
  release:
    types: [released]

jobs:
  deploy:
    timeout-minutes: 2
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - deploy-branch: main

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          # Required for branch search below.
          fetch-depth: 0

      - name: Get the tag (version)
        id: get-tag
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}

      - name: Get branch tagged in ${{ steps.get-tag.outputs.VERSION }}
        id: get-tagged-branch
        run: |
          branches=$(git branch -r --contains ${{ github.ref }} | sed -e 's/origin\///g' | xargs echo)
          echo "${{ steps.get-tag.outputs.VERSION }} is in branch(es): $branches"
          echo ::set-output name=BRANCHES::$branches

      - name: Verify whether ${{ steps.get-tag.outputs.VERSION }} tagged a commit in deploy branch (${{ matrix.deploy-branch }})
        env:
          TAGGED_BRANCHES: ${{ steps.get-tagged-branch.outputs.BRANCHES }}
          DEPLOY_BRANCH: ${{ matrix.deploy-branch }}
        run: |
          if [[ "$TAGGED_BRANCHES" != *"$DEPLOY_BRANCH"* ]]
          then
            echo "::error::${{ steps.get-tag.outputs.VERSION }} does not tag a commit in the expected deployment branch ($DEPLOY_BRANCH), but instead in: $TAGGED_BRANCHES"
            exit 1
          fi

      - name: UNWANTED deploy of tag ${{ steps.get-tag.outputs.VERSION }}
        run: exit 1
